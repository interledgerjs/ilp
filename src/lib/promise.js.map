{"version":3,"file":"promise.js","sourceRoot":"","sources":["promise.ts"],"names":[],"mappings":";;AAAA,MAAa,gBAAgB;IAM3B;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAClD,IAAI,CAAC,eAAe,GAAG,OAAO,CAAA;YAC9B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAA;QAC9B,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,IAAW,OAAO;QAChB,OAAO,IAAI,CAAC,YAAY,CAAA;IAC1B,CAAC;IAEM,OAAO,CAAE,KAA0B;QACxC,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;IACvE,CAAC;IAEM,MAAM,CAAE,MAAY;QACzB,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;IACtE,CAAC;CAEF;AAzBD,4CAyBC","sourcesContent":["export class UnwrappedPromise<T> {\n\n  private innerPromise: Promise<T>\n  private resolveCallback?: (value?: T | PromiseLike<T>) => void\n  private rejectCallback?: (reason?: any) => void\n\n  constructor () {\n    this.innerPromise = new Promise((resolve, reject) => {\n      this.resolveCallback = resolve\n      this.rejectCallback = reject\n    })\n  }\n\n  public get promise (): Promise<T> {\n    return this.innerPromise\n  }\n\n  public resolve (value?: T | PromiseLike<T>) {\n    return this.resolveCallback ? this.resolveCallback(value) : undefined\n  }\n\n  public reject (reason?: any) {\n    return this.rejectCallback ? this.rejectCallback(reason) : undefined\n  }\n\n}\n"]}