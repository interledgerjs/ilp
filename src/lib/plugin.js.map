{"version":3,"file":"plugin.js","sourceRoot":"","sources":["plugin.ts"],"names":[],"mappings":"","sourcesContent":["\nimport { EventEmitter } from 'events'\nexport interface FunctionWithVersion extends Function {\n  version?: number\n}\n\nexport type DataHandler = (data: Buffer) => Promise<Buffer>\n\nexport type MoneyHandler = (amount: string) => Promise<void>\n\nexport interface PluginV2 extends EventEmitter {\n  constructor: FunctionWithVersion\n  connect: () => Promise<void>\n  disconnect: () => Promise<void>\n  isConnected: () => boolean\n  sendData: DataHandler\n  sendMoney: MoneyHandler\n  registerDataHandler: (handler: DataHandler) => void\n  deregisterDataHandler: () => void\n  registerMoneyHandler: (handler: MoneyHandler) => void\n  deregisterMoneyHandler: () => void\n}\n"]}